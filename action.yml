name: "Install Chromium"
description: "This action installs the version of Chromium of your choice"
inputs:
  revision:
    description: "Revision"
    required: false
    default: "latest" # integer
  trunk:
    description: "Source"
    required: false
    default: "continuous" # snapshots
runs:
  using: "composite"
  steps:
    - name: Check prerequisites
      shell: bash
      run: |
        if ! command -v unzip &> /dev/null; then
          echo "unzip is required but not installed. Please install unzip." >&2
          exit 1
        fi
        if ! command -v curl &> /dev/null; then
          echo "curl is required but not installed. Please install curl." >&2
          exit 1
        fi

    - name: Determine platform and architecture
      id: platform
      shell: bash
      run: |
        os="$(uname -s)"
        arch="$(uname -m)"
        case "${{ inputs.trunk }}" in
          continuous|snapshots) trunk="${{ inputs.trunk }}" ;;
          *) echo "Unknown trunk. Use 'continuous' or 'snapshots'." >&2; exit 1 ;;
        esac

        if [[ $os == "Darwin" ]]; then
          platform="mac"
          arch=$([[ $arch == "arm64" ]] && echo "Mac_Arm" || echo "Mac")
        elif [[ $os == "Linux" ]]; then
          platform="linux"
          case $arch in
            "aarch64" | "arm64")
              if [ "$trunk" = "snapshots" ]; then
                arch="Arm"
              else
                arch="Linux"
              fi
              ;;
            "x86_64" | "amd64") arch="Linux_x64" ;;
            *) arch="Linux" ;;
          esac
        else
          echo "Unsupported OS." >&2
          exit 1
        fi

        echo "platform=$platform" >> $GITHUB_OUTPUT
        echo "arch=$arch" >> $GITHUB_OUTPUT
        echo "trunk=$trunk" >> $GITHUB_OUTPUT

    - name: Fetch and install Chromium
      shell: bash
      run: |
        base_url="https://www.googleapis.com/download/storage/v1/b/chromium-browser-${{ steps.platform.outputs.trunk }}/o/${{ steps.platform.outputs.arch }}"
        revision="${{ inputs.revision }}"
        if [[ $revision == "latest" ]]; then
          last_change_url="${base_url}%2FLAST_CHANGE?alt=media"
          revision=$(curl --silent -L -f $last_change_url)
          if [[ -z "$revision" ]]; then
            echo "Failed to fetch the latest revision number." >&2
            exit 1
          fi
          echo "Using latest revision found: $revision"
        else
          echo "Using revision specified: $revision"
        fi

        snapshot_zip_url="${base_url}%2F$revision%2Fchrome-${{ steps.platform.outputs.platform }}.zip?alt=media"
        echo "Downloading Chromium snapshot $revision..."
        chromium_install_dir="$PWD/chromium-$revision"
        rm -rf "$chromium_install_dir" || exit 1
        mkdir -p "$chromium_install_dir" || exit 1
        curl --silent -L -f "$snapshot_zip_url" --output "$chromium_install_dir/chromium.zip" || exit 1

        echo "Unzipping Chromium snapshot..."
        unzip -qq "$chromium_install_dir/chromium.zip" -d "$chromium_install_dir" || exit 1
        rm -f "$chromium_install_dir/chromium.zip"

        chromium_directory="$chromium_install_dir/chrome-${{ steps.platform.outputs.platform }}"

        if [[ ${{ steps.platform.outputs.platform }} == "linux" ]]; then
          sudo chown root:root "$chromium_directory/chrome_sandbox"
          sudo chmod 4755 "$chromium_directory/chrome_sandbox"
          export CHROME_DEVEL_SANDBOX="$chromium_directory/chrome_sandbox"
        fi

        echo "CHROMIUM_DIRECTORY=$chromium_directory" >> $GITHUB_ENV
        echo "CHROMIUM_BIN=$chromium_directory/chrome" >> $GITHUB_ENV
