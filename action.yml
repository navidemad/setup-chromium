name: "Install Chromium"
description: "This action installs the version of Chromium of your choice"
inputs:
  revision:
    description: "Revision"
    required: false
    default: "latest" # integer
  trunk:
    description: "Source"
    required: false
    default: "continuous" # snapshots
runs:
  using: "composite"
  steps:
    - name: Fetch revision from snapshots and install it locally
      shell: bash
      run: |
        command -v unzip >/dev/null || {
          echo "You need to install \"unzip\" first!"
          exit 1
        }

        if [ "${{ inputs.trunk }}" = "continuous" ]; then
          CHROMIUM_TRUNK="continuous"
        elif [ "${{ inputs.trunk }}" = "snapshots" ]; then
          CHROMIUM_TRUNK="snapshots"
        else
          echo "Unknown trunk (allowed: continuous or snapshots)" >&2
          exit 1
        fi

        if [[ ${OS:-} = Windows_NT ]]; then
          echo "Windows is not yet supported" >&2
          exit 1
        elif [ "$(uname -s)" = "Darwin" ]; then
          if [ "$(uname -m)" = "arm64" ] && [ "${CHROMIUM_TRUNK}" = "snapshots" ]; then
            CHROMIUM_ARCH="Mac_Arm"
          else
            CHROMIUM_ARCH="Mac"
          fi
          CHROMIUM_PLATFORM="mac"
        else
          case $(uname -m) in
          "aarch64" | "arm64")
            if [ "${CHROMIUM_TRUNK}" = "snapshots" ]; then
              CHROMIUM_ARCH="Arm"
            else
              CHROMIUM_ARCH="Linux"
            fi
            ;;
          "x86_64" | "amd64")
            CHROMIUM_ARCH="Linux_x64"
            ;;
          *)
            CHROMIUM_ARCH="Linux"
            ;;
          esac
          CHROMIUM_PLATFORM="linux"
        fi

        echo "Trunk: ${CHROMIUM_TRUNK}, Arch: ${CHROMIUM_ARCH}, Platform: ${CHROMIUM_PLATFORM}"

        CHROMIUM_SNAPSHOT_BASE_URL="https://www.googleapis.com/download/storage/v1/b/chromium-browser-$CHROMIUM_TRUNK/o/$CHROMIUM_ARCH"

        if [ "${{ inputs.revision }}" = "latest" ]; then
          CHROMIUM_LASTCHANGE_URL="$CHROMIUM_SNAPSHOT_BASE_URL%2FLAST_CHANGE?alt=media"
          CHROMIUM_REVISION=$(curl --silent -L -f $CHROMIUM_LASTCHANGE_URL)
          if test -z "$CHROMIUM_REVISION"; then
            echo "Failed to fetch the latest revision number." >&2
            exit 1
          fi
          echo "Using latest revision: $CHROMIUM_REVISION"
        else
          CHROMIUM_REVISION="${{ inputs.revision }}"
          echo "Using specified revision: $CHROMIUM_REVISION"
        fi

        CHROMIUM_SNAPSHOT_ZIP_URL="$CHROMIUM_SNAPSHOT_BASE_URL%2F$CHROMIUM_REVISION%2Fchrome-$CHROMIUM_PLATFORM.zip?alt=media"
        CHROMIUM_INSTALL_TMP_DIR="/tmp/chromium-$CHROMIUM_REVISION"

        echo "Downloading Chromium snapshot..."
        rm -rf "$CHROMIUM_INSTALL_TMP_DIR"
        mkdir -p "$CHROMIUM_INSTALL_TMP_DIR" || {
          echo "Failed to create install directory \"$CHROMIUM_INSTALL_TMP_DIR\"" >&2
          exit 1
        }

        CHROMIUM_SNAPSHOT_ZIP_FILE="chrome-$CHROMIUM_PLATFORM-$CHROMIUM_REVISION.zip"
        echo "CHROMIUM_SNAPSHOT_ZIP_FILE: '$CHROMIUM_SNAPSHOT_ZIP_FILE'"
        curl --silent -L -f "$CHROMIUM_SNAPSHOT_ZIP_URL" --output "$CHROMIUM_INSTALL_TMP_DIR/$CHROMIUM_SNAPSHOT_ZIP_FILE" || {
          echo "Failed to download Chromium snapshot." >&2
          exit 1
        }

        echo "Unzipping Chromium snapshot..."
        unzip -qq "$CHROMIUM_INSTALL_TMP_DIR/$CHROMIUM_SNAPSHOT_ZIP_FILE" -d "$CHROMIUM_INSTALL_TMP_DIR" || {
          echo "Failed to unzip Chromium snapshot." >&2
          exit 1
        }

        echo "Chromium extracted to $CHROMIUM_INSTALL_TMP_DIR/chrome-$CHROMIUM_PLATFORM"

        CHROMIUM_DIRECTORY="$PWD/chromium-bin"
        ln -fs "$CHROMIUM_INSTALL_TMP_DIR/chrome-$CHROMIUM_PLATFORM" "$CHROMIUM_DIRECTORY"

        if [ "$CHROMIUM_PLATFORM" = "linux" ]; then
          echo "Changing owner and permissions for chrome_sandbox (requires privileges):\n"
          # sudo chown root:root "$CHROMIUM_DIRECTORY/chrome_sandbox"
          # sudo chmod 4755 "$CHROMIUM_DIRECTORY/chrome_sandbox"
        end

        ls -la "$CHROMIUM_DIRECTORY/"
        echo "CHROMIUM_DIRECTORY=$CHROMIUM_DIRECTORY" >> $GITHUB_ENV
        echo "CHROMIUM_BIN=$CHROMIUM_DIRECTORY/chrome-$CHROMIUM_PLATFORM" >> $GITHUB_ENV
